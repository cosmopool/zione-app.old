import 'package:flutter/material.dart';

addTicketModal(context) {
  return showModalBottomSheet<void>(
    context: context,
    builder: (BuildContext context) {
      return Container(
        // height: 200,
        color: Colors.amber,
        child: Center(
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            mainAxisSize: MainAxisSize.min,
            children: <Widget>[
              Column(
                children: [
                  TicketForm(),
                ],
              )
              // onPressed: () => Navigator.pop(context),
            ],
          ),
        ),
      );
    },
  );
}

class TicketForm extends StatefulWidget {
  String? _clientName;
  String? _clientPhone;
  String? _clientAddress;
  String? _serviceType;
  String? _description;

  @override
  _TicketFormState createState() => _TicketFormState();
}

class _TicketFormState extends State<TicketForm> {
  Widget _buildClientName() {
    return TextFormField(
      decoration: const InputDecoration(labelText: 'Nome do cliente'),
      validator: (value) {
        if (value == null || value.isEmpty) {
          return 'Preencha esse campo';
        }
      },
      onSaved: (value) {
        widget._clientName = value;
      },
    );
  }

  Widget _buildClientPhone() {
    return TextFormField(
      decoration: const InputDecoration(labelText: 'Telefone'),
      keyboardType: TextInputType.phone,
      validator: (value) {
        if (value == null || value.isEmpty) {
          return 'Preencha esse campo';
        }
      },
      onSaved: (value) {
        widget._clientPhone = value;
      },
    );
  }

  Widget _buildClientAddress() {
    return TextFormField(
      decoration: const InputDecoration(labelText: 'Telefone'),
      validator: (value) {
        if (value == null || value.isEmpty) {
          return 'Preencha esse campo';
        }
      },
      onSaved: (value) {
        widget._clientAddress = value;
      },
    );
  }

  Widget _buildServiceType() {
    return TextFormField(
      decoration: const InputDecoration(labelText: 'Telefone'),
      validator: (value) {
        if (value == null || value.isEmpty) {
          return 'Preencha esse campo';
        }
      },
      onSaved: (value) {
        widget._serviceType = value;
      },
    );
  }

  Widget _buildDescription() {
    return TextFormField(
      decoration: const InputDecoration(labelText: 'Telefone'),
      validator: (value) {
        if (value == null || value.isEmpty) {
          return 'Preencha esse campo';
        }
      },
      onSaved: (value) {
        widget._description = value;
      },
    );
  }

  @override
  Widget build(BuildContext context) {
    return Form(
      child: Column(
        children: <Widget>[
          _buildClientName(),
          _buildClientPhone(),
          _buildClientAddress(),
          _buildServiceType(),
          _buildDescription(),
        ],
      ),
    );
  }
}
